server.port=8081

# 指定banner位置
spring.banner.location=classpath:banner/banner.txt

# 属性名前缀禁止使用 random.
# 随机字符串
stochastic.strVal=${random.value}
# 随机int
stochastic.intVal=${random.int}
# 随机long
stochastic.longVal=${random.long}
# uuid
stochastic.uuidVal=${random.uuid}
# 随机int，设置最大取值（10）
stochastic.lessOrEqualVal=${random.int(10)}
# 随机int，设置取值范围（1024~65536）
stochastic.rangeVal=${random.int(1024,65536)}

# 属性名前缀禁止使用 random.
# 随机字符串
stochastic.component.strVal=${random.value}
# 随机int
stochastic.component.intVal=${random.int}
# 随机long
stochastic.component.longVal=${random.long}
# uuid
stochastic.component.uuidVal=${random.uuid}
# 随机int，设置最大取值（10）
stochastic.component.lessOrEqualVal=${random.int(10)}
# 随机int，设置取值范围（1024~65536）
stochastic.component.rangeVal=${random.int(1024,65536)}

# 属性名前缀禁止使用 random.
# 随机字符串
stochastic.enable.strVal=${random.value}
# 随机int
stochastic.enable.intVal=${random.int}
# 随机long
stochastic.enable.longVal=${random.long}
# uuid
stochastic.enable.uuidVal=${random.uuid}
# 随机int，设置最大取值（10）
stochastic.enable.lessOrEqualVal=${random.int(10)}
# 随机int，设置取值范围（1024~65536）
stochastic.enable.rangeVal=${random.int(1024,65536)}

# 校验 @ConfigurationProperties 属性不能为空
stochastic.component.validated.strVal=${random.value}
stochastic.component.validated.intVal=${random.int}


# jdk 其他类型配置
jdk.type.bigDecimalVal=0.01

# list 使用半角逗号分隔
jdk.type.listVal=a,b,c,e
jdk.type.listVal2=a1;b1;c1;e1

# set 使用半角逗号分隔
jdk.type.setVal=1,2,3,4

# map 使用 JSON 格式
jdk.type.mapVal={key1:'val1', key2:'val2'}

jdk.type.dateVal=2023-11-01 00:00:00
jdk.type.localDateTimeVal=2023-11-01 00:00:00
jdk.type.localDateVal=2023-11-01
jdk.type.localTimeVal=00:00:00

# @ConfigurationProperties(prefix = "jdk.type.configuration") 读取
jdk.type.configuration.listVal[0]=libai
jdk.type.configuration.listVal[1]=dufu

jdk.type.configuration.setVal[0]=1
jdk.type.configuration.setVal[1]=2

jdk.type.configuration.mapVal[key1]=val1
jdk.type.configuration.mapVal[key2]=val2

stochastic.construction.strVal=God look what people do something

# 配置调度队列容量
spring.task.execution.pool.queue-capacity=100
# 配置调度线程池核心线程数
spring.task.execution.pool.core-size=8
# 是否允许核心线程超时，启用可以动态的扩展和缩小线程池
spring.task.execution.pool.allow-core-thread-timeout=true
# 配置调度线程池最大线程数
spring.task.execution.pool.max-size=16
# 线程存活时间
spring.task.execution.pool.keep-alive=10s
# 线程名称前缀
spring.task.scheduling.thread-name-prefix=scheduling-